Due: Tuesday 9/7/15

Outline: https://github.com/turingschool/curriculum/blob/master/source/projects/chisel.markdown
Markdown: https://daringfireball.net/projects/markdown/syntax
Cheat Sheet: https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#emphasis
HTML: https://www.codecademy.com/tracks/web

-- REQUIREMENTS --
4-8 Classes
40-100 Tests
Multiple Enumerables
File I/O (read and write)

-- FLOW --
# Parser
# ruby chisel.rb input.markdown output.html
# chisel read input.markdown
# split input.markdown into strings of each line
# save as variable

# recognize if string includes certain characters
# if it includes character, gsub markdown elements with html
# leave "inside" text intact
# continue evaluating string
# loop back to top until end of line, then continue to next string

# chisel write output.html

-- LOGIC --
Apply similar reasoning across formatting, lists, linked, etc.
###
num = 3
"<h#{num}>"


-- FILES & TESTS --
Chisel.rb - main file
Chisel Parser - manages everything
Paragraph.rb
Unordered List.rb
Ordered List.rb

Header
List (UL/OL)
Block (no lines)
Symbols
Links = inline [test] (www.github.com)

-- REQUIRE --
Chisel Parser file in Chisel file
all files in Chisel Parser

-- TO DO --
Create a class at the end to add empty space and lines ("") back in...
output_file = converted_file.gsub! "", /^$\n/ # convert empty qoutes into new lines ??
